<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="realm"/>
        <property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled"
                  value="false"/>
        <property name="subjectFactory" ref="subjectFactory"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- Subject工厂 -->
    <bean id="subjectFactory"
          class="com.xinyunlian.jinfu.common.security.authc.StatelessDefaultSubjectFactory"/>
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/web/auth/login"/>
        <property name="filterChainDefinitions">
            <value>
                /web/security=appForceCheck,anon
                /web/loan/dealer/callback=anon
                /web/oauthClient/**=appForceCheck,anon
                /web/oauthServer/access_token=appForceCheck,anon
                /web/oauthServer/user_profile=appForceCheck,anon
                /web/thirdparty/nbcb/userinfo=appForceCheck,anon
                /web/thirdparty/nbcb/receive=appForceCheck,anon
                /web/thirdparty/nbcb/loans=appForceCheck,anon
                /web/open-api/**=appForceCheck,anon
                /web/user/auth/*=appForceCheck,anon
                /web/thirdparty/nbcb/loans=anon
                /web/thirdparty/nbcb/receive=anon
                /web/thirdparty/nbcb/userinfo=anon
                /web/v2/api-docs/**=anon
                /web/register/**=appForceCheck,anon
                /web/forget/**=appForceCheck,anon
                /web/user/active/**=appForceCheck,anon
                /web/loan/callback/**=appForceCheck,anon
                /web/loan/repay/callback/**=appForceCheck,anon
                /web/loan/testCallback=appForceCheck,anon
                /web/loan/testPay=appForceCheck,anon
                /web/loan/log=appForceCheck,anon
                /web/loan/init=anon
                /web/system/**=appForceCheck,anon
                /web/loan/areaVersion=appForceCheck,anon
                /web/cms/article/**=appForceCheck,anon
                /web/shopkeeper/home/unLogin=appForceCheck,anon
                /web/aio/home/**=appForceCheck,anon
                /web/shopkeeper/auth/login=appForceCheck,anon
                /web/shopkeeper/home/product/**=appForceCheck,anon
                /web/user/bank/contract/zfxy=appForceCheck,anon
                /web/shopkeeper/my/getServerTimestamp=appForceCheck,anon
                /web/shopkeeper/auth/*=appForceCheck,anon
                /web/ga/**=appForceCheck,anon
                /web/log/**=appForceCheck,anon
                /web/notice/**=appForceCheck,anon
                /web/**=appForceCheck,authc
            </value>
        </property>
    </bean>

    <bean id="authc" class="com.xinyunlian.jinfu.common.security.authc.StatelessAuthcFilter"/>
    <bean id="appForceCheck" class="com.xinyunlian.jinfu.common.security.authc.AppForceUpdateFilter">
        <property name="appVersionCheckSsl" value="${app.version.check.ssl}"/>
        <property name="appVersionCheckUrl" value="${app.version.check.url}"/>
    </bean>

    <!-- <bean id="realm" class="org.apache.shiro.realm.text.PropertiesRealm" /> -->
    <bean id="realm" class="com.xinyunlian.jinfu.common.security.authc.StatelessRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="tokenExpire" value="86400"/>
    </bean>

    <bean id="credentialsMatcher" class="com.xinyunlian.jinfu.common.security.authc.StatelessCredentialsMatcher"/>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
          depends-on="lifecycleBeanPostProcessor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- captcha  -->
    <bean id="kaptchaSupport" class="com.xinyunlian.jinfu.common.security.KaptchaSupport">
        <constructor-arg type="java.util.Properties">
            <props>
                <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
            </props>
        </constructor-arg>
    </bean>

</beans>
