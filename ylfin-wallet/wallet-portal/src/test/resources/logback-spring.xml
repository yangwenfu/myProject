<configuration scan="1">
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!--
     configuration to be enabled when the "prod, qa" profile is active
    -->
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}/}spring.log}"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <appender name="DEBUG_LEVEL_REMAPPER" class="org.springframework.boot.logging.logback.LevelRemappingAppender">
        <destinationLogger>org.springframework.boot</destinationLogger>
    </appender>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>
    <springProfile name="production, test">
        <springProperty scope="context" name="spring.kafka.bootstrap-servers" source="spring.kafka.bootstrap-servers"
                        defaultValue="localhost:9092"/>
        <springProperty scope="context" name="spring.application.name" source="spring.application.name"
                        defaultValue="undefined"/>
        <appender name="KAFKA" class="com.ylfin.logging.logback.KafkaAppender">
            <topic>endpoints-log</topic>
            <bootstrapServers>192.168.100.163:9092</bootstrapServers>
            <valueSerializer>
                org.apache.kafka.common.serialization.StringSerializer
            </valueSerializer>
            <failOnStartup>false</failOnStartup>
            <customProp>acks|all</customProp>
            <layout class="com.ylfin.logging.logback.CustomJsonLayout">
                <module>${spring.application.name}</module>
                <timestampFormat>yyyy-MM-dd HH:mm:ss.SSS</timestampFormat>
                <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter"/>
            </layout>
        </appender>
        <appender name="ASYNC-KAFKA" class="ch.qos.logback.classic.AsyncAppender">
            <neverBlock>true</neverBlock>
            <includeCallerData>false</includeCallerData>
            <appender-ref ref="KAFKA"/>
        </appender>
    </springProfile>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}-%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!--
             each file should be at most 100MB, keep 60 days worth of history, but at most 20GB
            -->
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <logger name="org.apache.catalina.startup.DigesterFactory" level="ERROR"/>
    <logger name="org.apache.catalina.util.LifecycleBase" level="ERROR"/>
    <logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN"/>
    <logger name="org.apache.sshd.common.util.SecurityUtils" level="WARN"/>
    <logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN"/>
    <logger name="org.crsh.plugin" level="WARN"/>
    <logger name="org.crsh.ssh" level="WARN"/>
    <logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="ERROR"/>
    <logger name="org.hibernate.validator.internal.util.Version" level="WARN"/>
    <logger name="org.springframework.boot.actuate.autoconfigure.CrshAutoConfiguration" level="WARN"/>
    <logger name="org.springframework.boot.actuate.endpoint.jmx" additivity="false">
        <appender-ref ref="DEBUG_LEVEL_REMAPPER"/>
    </logger>
    <logger name="org.thymeleaf" additivity="false">
        <appender-ref ref="DEBUG_LEVEL_REMAPPER"/>
    </logger>
    <logger name="com.ylfin.logging" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </logger>
    <logger name="org.springframework.web.client" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
    </logger>
    <logger name="org.apache.http" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
    <springProfile name="production, test">
        <!--
         Do not sent kafka client logs to kafka. This way you could fill all the queue of AsyncAppender
        -->
        <logger name="org.apache.kafka" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
            <appender-ref ref="ASYNC-KAFKA"/>
        </root>
    </springProfile>
    <springProfile name="default">
        <!--
        <logger name="com.ylfin.dwhsync.consumer.DefaultSyncDispatcherpatcher" level="DEBUG"/>
        -->
        <!--
        <logger name="com.ylfin.dwhsync.repository" level="DEBUG"/>
        -->
        <!-- <logger name="org.springframework" level="DEBUG"/> -->
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>
</configuration>